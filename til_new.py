#!/usr/bin/env python
"""
This script is used
"""

import collections
import os
import re


def escape(xs):
    """Removes all non-ASCII printable chars from a string"""
    return re.sub(r'[^ ^a-zA-Z]+', '_', xs)


def unescape(topic):
    """Converts a topic dirname back into a human-readable string."""
    if topic == 'ios':
        return 'iOS'
    elif topic == 'kmaestro':
        return 'Keyboard Maestro'
    else:
        return topic[0].upper() + topic[1:]


def new_til(category, title, body):
    """Creates a new TIL in the given category."""
    if not os.path.isdir(category):
        os.mkdir(category.lower())

    # Make sure we have a unique file for the new TIL
    base_til_path = os.path.join(category.lower(), escape(title) + '.md')
    til_path = base_til_path
    i = 1
    while os.path.exists(til_path):
        til_path = base_til_path.replace('.md', '-%d.md' % i)
        i += 1

    with open(til_path, 'w') as f:
        f.write('# %s\n\n' % title)
        f.write(body)


def rebuild_index():
    dirs = [d for d in os.listdir('.') if os.path.isdir(d) and d != '.git']
    tils = collections.defaultdict(list)
    for d in dirs:
        for f in os.listdir(d):
            if f.endswith('.md'):
                tils[d].append(f)

    with open('README.md') as readme:
        old_readme = readme.read()

    lines = [
        '<!-- Autogenerated index.  Do not edit by hand! -->',
        '',
        '---',
        '',
        '## Categories',
        ''
    ]

    for topic in sorted(tils.keys()):
        lines.append('- [%s](#%s)' % (unescape(topic), topic))

    lines.extend(['', '---'])

    for topic, items in sorted(tils.items()):
        lines.append('')
        lines.append('## %s' % unescape(topic))
        lines.append('')
        for item in sorted(items):
            with open('%s/%s' % (topic, item)) as f:
                heading = f.readline()[2:].strip()
            lines.append('* <a href="%s/%s">%s</a>' % (topic, item, heading))

    new_readme = old_readme.split(lines[0])[0] + '\n'.join(lines)

    with open('README.md', 'w') as f:
        f.write(new_readme)


if __name__ == '__main__':
    import sys
    if '--reindex' not in sys.argv:
        new_til(os.environ['KMVAR_tmpTILCategory'],
                os.environ['KMVAR_tmpTILTitle'],
                os.environ['KMVAR_tmpTILBody'])
    rebuild_index()
